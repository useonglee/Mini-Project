{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/useong/NodeBird_SNS/front/components/LoginForm.js\",\n    _templateObject,\n    _templateObject2,\n    _s = $RefreshSig$();\n\n// 함수를 캐싱=useCallback , 값을 캐싱=useMemo\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-top: 10px;\\n\"]))); // const style = useMemo(() => ({ marginTop: 10 }), [])\n\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    padding: 10px;\\n\"])));\n_c2 = FormWrapper;\n\nfunction LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  var _useState = useState(''),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1]; // 컴포넌트의 프롭스로 넘겨주는 함수는 \"useCallback\"을 꼭 사용한다.\n\n\n  var onChangeId = useCallback(function (e) {\n    setId(e.target.value);\n  }, []);\n  var onChangePassword = useCallback(function (e) {\n    setPassword(e.target.value);\n  }, []);\n  var onSubmitForm = useCallback(function () {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-id\",\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-id\",\n        value: id,\n        onChange: onChangeId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-password\",\n        type: \"password\",\n        value: password,\n        onChange: onChangePassword,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: false,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"71+HE8XHzYDzU9jR9aPFdEuC8MA=\");\n\n_c3 = LoginForm;\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["/home/useong/NodeBird_SNS/front/components/LoginForm.js"],"names":["React","useState","useCallback","Form","Input","Button","Link","styled","PropTypes","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","setId","password","setPassword","onChangeId","e","target","value","onChangePassword","onSubmitForm","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["// 함수를 캐싱=useCallback , 값을 캐싱=useMemo\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ButtonWrapper = styled.div`\n    margin-top: 10px;\n`;\n\n// const style = useMemo(() => ({ marginTop: 10 }), [])\n\nconst FormWrapper = styled(Form)`\n    padding: 10px;\n`;\n\nfunction LoginForm({ setIsLoggedIn }) {\n    const [id, setId] = useState('');\n    const [password, setPassword] = useState('');\n\n    // 컴포넌트의 프롭스로 넘겨주는 함수는 \"useCallback\"을 꼭 사용한다.\n    const onChangeId = useCallback((e) => {\n        setId(e.target.value);\n    }, []);\n\n    const onChangePassword = useCallback((e) => {\n        setPassword(e.target.value);\n    }, []);\n\n    const onSubmitForm = useCallback(() => {\n        console.log(id, password);\n        setIsLoggedIn(true);\n    }, [id, password])\n    \n    return (\n        <FormWrapper onFinish={onSubmitForm}>\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required />      \n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input\n                    name=\"user-password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={onChangePassword}\n                    required\n                />\n            </div>\n            <ButtonWrapper>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n            </ButtonWrapper>\n        </FormWrapper>\n    );\n}\n\nLoginForm.propTypes = {\n    setIsLoggedIn: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}