{"ast":null,"code":"var _jsxFileName = \"/home/useong/\\uAE43 \\uB808\\uD37C\\uC9C0\\uD1A0\\uB9AC/Mini-Project/twitter_sns/front/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 28\n    }, this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"yViitBsbbl69mW3t/o7jzus6gBQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/useong/깃 레퍼지토리/Mini-Project/twitter_sns/front/pages/index.js"],"names":["React","useSelector","AppLayout","PostForm","PostCard","Home","state","user","isLoggedIn","post","mainPosts","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAAA,qBACWJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADtB;AAAA,MACJC,UADI,gBACJA,UADI;;AAAA,sBAEUP,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAFrB;AAAA,MAEJC,SAFI,iBAEJA,SAFI;;AAGZ,sBACI,QAAC,SAAD;AAAA,eAEKF,UAAU,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFnB,EAKKE,SAAS,CAACC,GAAV,CAAc,UAACF,IAAD,EAAU;AACrB,0BACI,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH,KAJA,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAhBQP,I;UACkBJ,W,EACDA,W;;;KAFjBI,I;AAkBT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\n\nfunction Home() {\n    const { isLoggedIn } = useSelector((state) => state.user);\n    const { mainPosts } = useSelector((state) => state.post);\n    return (\n        <AppLayout>\n            {/* 포스트폼은 로그인 사용자만 보인다 */}\n            {isLoggedIn && <PostForm />}\n            {/* 반복문이 있고 키가 바뀌지 않을 예정이면 index를 쓴다. */}\n            {/* 반복문이 없고 고유한 값을 유지하려면 .id */}\n            {mainPosts.map((post) => {\n                return (\n                    <PostCard key={post.id} post={post}/>\n                );\n            })}\n        </AppLayout>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}