{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // rootReducer 불러오기\n\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  // 빈 배열에는 싸가나 썽크가 들어간다.\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares)); // store는 state랑 reducer를 포함한 것\n\n  const store = createStore(reducer, enhancer); // store.dispatch({\n  //     type: 'CHANGE_NICKNAME',\n  //     data: 'boogieLee',\n  // })\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/home/useong/NodeBird_SNS/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACXL,OAAO,CAACF,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADI,GAEXH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFzB,CAHyB,CAMzB;;AACA,QAAME,KAAK,GAAGP,WAAW,CAACG,OAAD,EAAUG,QAAV,CAAzB,CAPyB,CAQzB;AACA;AACA;AACA;;AACA,SAAOC,KAAP;AACH,CAbD;;AAeA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// rootReducer 불러오기\nimport reducer from '../reducers'\n\nconst configureStore = () => {\n    // 빈 배열에는 싸가나 썽크가 들어간다.\n    const middlewares = [];\n    const enhancer = process.env.NODE_ENV === 'production'\n        ? compose(applyMiddleware(...middlewares))\n        : composeWithDevTools(applyMiddleware(...middlewares))\n    // store는 state랑 reducer를 포함한 것\n    const store = createStore(reducer, enhancer);\n    // store.dispatch({\n    //     type: 'CHANGE_NICKNAME',\n    //     data: 'boogieLee',\n    // })\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}